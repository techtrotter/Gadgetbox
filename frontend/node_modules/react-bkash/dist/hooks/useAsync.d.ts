import { DependencyList } from 'react';
export declare const useIsMounted: () => React.MutableRefObject<boolean>;
declare type AnyPromiseFunction = (...args: any[]) => Promise<any>;
declare type Awaited<T extends AnyPromiseFunction> = T extends () => Promise<infer U> ? U : never;
declare type UseAsyncReturnType<T extends AnyPromiseFunction> = {
    loading: boolean;
    error: Error | null;
    data: Awaited<T> | null;
    call: (...args: Parameters<T>) => void;
};
export declare const useAsync: <T extends AnyPromiseFunction>(cb: T, deps?: DependencyList, delayCall?: boolean) => UseAsyncReturnType<T>;
export {};
