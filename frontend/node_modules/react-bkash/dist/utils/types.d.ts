export declare type IPaymentRequest = {
    amount: string;
    intent: 'sale';
};
export declare type ICreatePaymentResponse = {
    paymentID: string;
    createTime: string;
    orgLogo: string;
    orgName: string;
    transactionStatus: string;
    amount: string;
    currency: string;
    intent: string;
    merchantInvoiceNumber: string;
};
export declare type ExecutePaymentResponse = {
    paymentID: string;
    createTime: string;
    updateTime: string;
    trxID: string;
    transactionStatus: string;
    amount: string;
    currency: string;
    intent: string;
    merchantInvoiceNumber: string;
};
declare type BkashComponentWithCustomAPI = {
    amount: string | number;
    bkashScriptURL: string;
    onCreatePayment: (paymentRequest: IPaymentRequest) => Promise<ICreatePaymentResponse>;
    onExecutePayment: (paymentID: string) => Promise<ExecutePaymentResponse>;
    additionalHeaders?: never;
    createPaymentURL?: never;
    executePaymentURL?: never;
};
declare type BkashComponentWithDefaultAPI = {
    amount: string | number;
    bkashScriptURL: string;
    additionalHeaders?: Record<string, string>;
    createPaymentURL: string;
    executePaymentURL: string;
    onCreatePayment?: never;
    onExecutePayment?: never;
};
export declare type BkashComponentConfig = BkashComponentWithDefaultAPI | BkashComponentWithCustomAPI;
export declare const isDefaultConfig: (config: BkashComponentConfig) => config is BkashComponentWithDefaultAPI;
export declare type BkashSuccessFunction = (data: ExecutePaymentResponse) => void;
export {};
