"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BkashButton = void 0;
const react_1 = __importStar(require("react"));
const useAsync_1 = require("./hooks/useAsync");
const utils_1 = require("./utils");
const BKASH_BUTTON_ID = 'bKash_button';
const BkashButton = ({ config, onClose, onSuccess, loader, children, renderError, debug = false, }) => {
    const [bkashNotfoundError, setBkashNotFoundError] = (0, react_1.useState)(false);
    const [paymentAPIError, setPaymentAPIError] = (0, react_1.useState)(null);
    const [bkashButtonError, setBkashButtonError] = (0, react_1.useState)(null);
    const paymentID = (0, react_1.useRef)(null);
    //create a hidden button on dom with bkash button id
    const createBkashButton = (0, react_1.useCallback)(() => {
        const button = document.createElement('button');
        button.style.display = 'none';
        button.id = BKASH_BUTTON_ID;
        const body = document.querySelector('body');
        if (body) {
            body.appendChild(button);
            return;
        }
    }, []);
    //click on bkash button
    const triggerBkash = (0, react_1.useCallback)(() => {
        const createdButton = document.getElementById(BKASH_BUTTON_ID);
        if (createdButton) {
            createdButton.click();
            createdButton.remove();
            return;
        }
        setBkashButtonError(new Error('Could not find bkash button on document'));
    }, []);
    //bkash iframe config
    const initBkash = (0, react_1.useCallback)(() => {
        const { amount } = config;
        const bkashConfig = {
            paymentMode: 'checkout',
            paymentRequest: {
                amount: String(amount),
                intent: 'sale',
                currency: 'BDT',
            },
            createRequest: (request) => __awaiter(void 0, void 0, void 0, function* () {
                if (!(0, utils_1.isDefaultConfig)(config)) {
                    try {
                        const result = yield config.onCreatePayment(request);
                        paymentID.current = result.paymentID;
                        bKash.create().onSuccess(result);
                    }
                    catch (error) {
                        setPaymentAPIError(error);
                        bKash.create().onError();
                    }
                    return;
                }
                const result = yield (0, utils_1.post)(config.createPaymentURL, request, config.additionalHeaders || {});
                if (result.error !== null) {
                    bKash.create().onError();
                    setPaymentAPIError(result.error);
                    return;
                }
                paymentID.current = result.data.paymentID;
                bKash.create().onSuccess(result.data);
            }),
            executeRequestOnAuthorization: () => __awaiter(void 0, void 0, void 0, function* () {
                if (paymentID.current) {
                    if (!(0, utils_1.isDefaultConfig)(config)) {
                        try {
                            const result = yield config.onExecutePayment(paymentID.current);
                            onSuccess(result);
                        }
                        catch (error) {
                            setPaymentAPIError(error);
                            bKash.execute().onError();
                        }
                        return;
                    }
                    const result = yield (0, utils_1.post)(config.executePaymentURL, { paymentID: paymentID.current }, config.additionalHeaders || {});
                    if (result.error !== null) {
                        setPaymentAPIError(result.error);
                        bKash.execute().onError();
                        return;
                    }
                    onSuccess(result.data);
                }
            }),
            onClose: () => onClose(),
        };
        if (typeof bKash === 'undefined') {
            setBkashNotFoundError(true);
            return;
        }
        bKash.init(bkashConfig);
    }, [config, onClose, onSuccess]);
    // Load dependencies & setup bkash
    const initFunction = (0, react_1.useCallback)(() => __awaiter(void 0, void 0, void 0, function* () {
        if (debug) {
            console.log('[bKash] Initializing bKash');
        }
        createBkashButton();
        yield (0, utils_1.loadDependencies)(config.bkashScriptURL);
        initBkash();
        return true;
    }), [config.bkashScriptURL, createBkashButton, debug, initBkash]);
    const { loading, data, error } = (0, useAsync_1.useAsync)(initFunction);
    /**
     * Handler that clicks bkash button and also calls children's onClick handler if it exists
     */
    const onClickHandler = (0, react_1.useCallback)((e) => {
        var _a, _b;
        triggerBkash();
        if ((0, react_1.isValidElement)(children)) {
            (_b = (_a = children.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        }
    }, [children, triggerBkash]);
    if (loading) {
        return loader || react_1.default.createElement("p", null, "Loading...");
    }
    if (error) {
        if (renderError)
            return renderError(error);
        return (react_1.default.createElement("div", null,
            react_1.default.createElement("h6", null, "Bkash Loading Error"),
            react_1.default.createElement("p", null,
                "Error: ",
                error.message)));
    }
    if (bkashNotfoundError) {
        if (renderError)
            return renderError(new Error('Bkash was not found in window, please make sure you have provided the correct bkash.js  script url in	BkashComponent config prop'));
        return (react_1.default.createElement("p", null, "Bkash was not found in window, please make sure you have provided the correct bkash.js script url in BkashComponent config prop"));
    }
    if (paymentAPIError) {
        if (renderError)
            return renderError(paymentAPIError);
        return (react_1.default.createElement("div", null,
            react_1.default.createElement("h6", null, "There was a problem calling the payment API"),
            debug && react_1.default.createElement("p", null,
                "Error Message: ",
                paymentAPIError.message)));
    }
    if (bkashButtonError) {
        if (renderError)
            return renderError(bkashButtonError);
        return (react_1.default.createElement("div", null,
            react_1.default.createElement("h6", null, "There was a problem initiating a bKash create payment session"),
            debug && react_1.default.createElement("p", null,
                "Error Message: ",
                bkashButtonError.message)));
    }
    if (data) {
        return react_1.default.createElement("div", null, (0, react_1.cloneElement)(children, { onClick: onClickHandler }));
    }
    return null;
};
exports.BkashButton = BkashButton;
exports.default = exports.BkashButton;
__exportStar(require("./hooks/useAsync"), exports);
__exportStar(require("./utils"), exports);
//# sourceMappingURL=index.js.map