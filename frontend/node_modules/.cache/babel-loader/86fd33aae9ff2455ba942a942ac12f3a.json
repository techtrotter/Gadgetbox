{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productCreateReviewReducer, topRatedProductReducer } from './redux/reducers/productReducers';\nimport { cartReducer } from './redux/reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './redux/reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, MyOrderListReducer, OrderListReducer, orderDeliverReducer, orderDeleteReducer } from './redux/reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productCreateReviewReducer,\n  topProduct: topRatedProductReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  usersList: userListReducer,\n  updateProfile: userUpdateProfileReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDelete: orderDeleteReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  myOrderList: MyOrderListReducer,\n  orderList: OrderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleWare = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productCreateReviewReducer","topRatedProductReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","MyOrderListReducer","OrderListReducer","orderDeliverReducer","orderDeleteReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","topProduct","cart","userLogin","userRegister","userDetails","usersList","updateProfile","userDelete","userUpdate","orderCreate","orderDelete","orderDetails","orderPay","myOrderList","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleWare","store"],"sources":["C:/Users/ASUS/django-react-ecommerce-website/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productCreateReviewReducer, topRatedProductReducer } from './redux/reducers/productReducers'\r\n\r\nimport { cartReducer } from './redux/reducers/cartReducers'\r\n\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './redux/reducers/userReducers'\r\n\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, MyOrderListReducer, OrderListReducer, orderDeliverReducer, orderDeleteReducer } from './redux/reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productCreateReviewReducer,\r\n    topProduct: topRatedProductReducer,\r\n    \r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    usersList: userListReducer,\r\n    updateProfile: userUpdateProfileReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDelete: orderDeleteReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    myOrderList: MyOrderListReducer,\r\n    orderList: OrderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare)))\r\n\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,kBAAkB,EAAEC,qBAAqB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,0BAA0B,EAAEC,sBAAsB,QAAQ,kCAAkC;AAElN,SAASC,WAAW,QAAQ,+BAA+B;AAE3D,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,wBAAwB,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,+BAA+B;AAE1L,SAASC,kBAAkB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,kBAAkB,QAAQ,gCAAgC;AAGxL,MAAMC,OAAO,GAAG1B,eAAe,CAAC;EAC5B2B,WAAW,EAAEvB,kBAAkB;EAC/BwB,cAAc,EAAEvB,qBAAqB;EACrCwB,aAAa,EAAEvB,oBAAoB;EACnCwB,aAAa,EAAEvB,oBAAoB;EACnCwB,aAAa,EAAEvB,oBAAoB;EACnCwB,mBAAmB,EAAEvB,0BAA0B;EAC/CwB,UAAU,EAAEvB,sBAAsB;EAElCwB,IAAI,EAAEvB,WAAW;EAEjBwB,SAAS,EAAEvB,gBAAgB;EAC3BwB,YAAY,EAAEvB,mBAAmB;EACjCwB,WAAW,EAAEvB,kBAAkB;EAC/BwB,SAAS,EAAEtB,eAAe;EAC1BuB,aAAa,EAAExB,wBAAwB;EACvCyB,UAAU,EAAEvB,iBAAiB;EAC7BwB,UAAU,EAAEvB,iBAAiB;EAE7BwB,WAAW,EAAEvB,kBAAkB;EAC/BwB,WAAW,EAAElB,kBAAkB;EAC/BmB,YAAY,EAAExB,mBAAmB;EACjCyB,QAAQ,EAAExB,eAAe;EACzByB,WAAW,EAAExB,kBAAkB;EAC/ByB,SAAS,EAAExB,gBAAgB;EAC3ByB,YAAY,EAAExB;AAClB,CAAC,CAAC;AAEF,MAAMyB,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAEtD,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAEvD,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAE5D,MAAMK,YAAY,GAAG;EACjBtB,IAAI,EAAE;IACFuB,SAAS,EAAER,oBAAoB;IAC/BS,eAAe,EAAEH;EACrB,CAAC;EAEDpB,SAAS,EAAE;IAAEwB,QAAQ,EAAEL;EAAoB;AAC/C,CAAC;AAED,MAAMM,UAAU,GAAG,CAAC1D,KAAK,CAAC;AAE1B,MAAM2D,KAAK,GAAG9D,WAAW,CAAC2B,OAAO,EAAE8B,YAAY,EAC3CrD,mBAAmB,CAACF,eAAe,CAAC,GAAG2D,UAAU,CAAC,CAAC,CAAC;AAGxD,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}